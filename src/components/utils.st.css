@st-import [
    --background,
    --foreground,
    --muted,
    --muted-foreground,
    --popover,
    --popover-foreground,
    --card,
    --card-foreground,
    --border,
    --input,
    --primary,
    --primary-foreground,
    --secondary,
    --secondary-foreground,
    --accent,
    --accent-foreground,
    --destructive,
    --destructive-foreground,
    --ring,
    --radius,

    --tw-border-spacing-x,
    --tw-border-spacing-y,
    --tw-translate-x,
    --tw-translate-y,
    --tw-rotate,
    --tw-skew-x,
    --tw-skew-y,
    --tw-scale-x,
    --tw-scale-y,
    --tw-pan-x,
    --tw-pan-y,
    --tw-pinch-zoom,
    --tw-scroll-snap-strictness: proximity,
    --tw-gradient-from-position,
    --tw-gradient-via-position,
    --tw-gradient-to-position,
    --tw-ordinal,
    --tw-slashed-zero,
    --tw-numeric-figure,
    --tw-numeric-spacing,
    --tw-numeric-fraction,
    --tw-ring-inset,
    --tw-ring-offset-width,
    --tw-ring-offset-color,
    --tw-ring-color,
    --tw-ring-offset-shadow,
    --tw-ring-shadow,
    --tw-shadow,
    --tw-shadow-colored,
    --tw-blur,
    --tw-brightness,
    --tw-contrast,
    --tw-grayscale,
    --tw-hue-rotate,
    --tw-invert,
    --tw-saturate,
    --tw-sepia,
    --tw-drop-shadow,
    --tw-backdrop-blur,
    --tw-backdrop-brightness,
    --tw-backdrop-contrast,
    --tw-backdrop-grayscale,
    --tw-backdrop-hue-rotate,
    --tw-backdrop-invert,
    --tw-backdrop-opacity,
    --tw-backdrop-saturate,
    --tw-backdrop-sepia,
    --tw-contain-size,
    --tw-contain-layout,
    --tw-contain-paint,
    --tw-contain-style,
] from "./vars.st.css";



/*  THEME */

.bg-primary {
    --background-color: hsl(var(--primary));
}

.bg-accent {
    background-color: hsl(var(--accent))
}

.bg-background {
    background-color: hsl(var(--background))
}

.bg-destructive {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--destructive)/var(--tw-bg-opacity))
}

.rounded {
    border-radius: .25rem
}

.rounded-full {
    border-radius: 9999px
}

.rounded-lg {
    border-radius: var(--radius)
}

.rounded-md {
    border-radius: calc(var(--radius) - 2px)
}

.rounded-none {
    border-radius: 0
}

.rounded-sm {
    border-radius: calc(var(--radius) - 4px)
}

.rounded-xl {
    border-radius: calc(var(--radius) + 4px)
}


.border {
    border-width: 1px
}

.border-0 {
    border-width: 0
}

.border-2 {
    border-width: 2px
}



/* ---------------- */


.transition-colors {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-duration: .15s;
}

.shadow {
    --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, .1), 0 1px 2px -1px rgba(0, 0, 0, .1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color)
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.shadow-lg,
.shadow-md {
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.shadow-none,
.shadow-sm {
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}



.shadow-md {
    --tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, .1), 0 2px 4px -2px rgba(0, 0, 0, .1);
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color)
}

.shadow-lg {
    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, .1), 0 4px 6px -4px rgba(0, 0, 0, .1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color)
}

.shadow-none {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000
}

.shadow-sm {
    --tw-shadow: 0 1px 2px 0 rgba(0,0,0,.05);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color)
}

.shadow-xl {
    --tw-shadow: 0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);
    --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)
}

.ring {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)
}

.ring,.ring-0 {
    box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)
}

.ring-0 {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color)
}

.ring-1 {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color)
}

.ring-1,.ring-2 {
    box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)
}

.ring-2 {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color)
}

.ring-border {
    --tw-ring-color: hsl(var(--border))
}

.ring-ring {
    --tw-ring-color: hsl(var(--ring))
}

.ring-sidebar-ring {
    --tw-ring-color: hsl(var(--sidebar-ring))
}

.ring-offset-background {
    --tw-ring-offset-color: hsl(var(--background))
}